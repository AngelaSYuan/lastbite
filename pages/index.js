import { useState, useEffect } from 'react';
import Head from "next/head";
import { Inter } from "next/font/google";
import styles from "../styles/Home.module.css";
import { getFirestore, collection, getDocs } from 'firebase/firestore';
import firebase from '../firebase'; // Import your Firebase configuration
import { useRouter } from 'next/router';

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const router = useRouter();
  const [restaurants, setRestaurants] = useState([]);
  const [selectedRestaurant, setSelectedRestaurant] = useState(null);
  const [selectedItem, setSelectedItem] = useState(null);
  const [quantity, setQuantity] = useState(1);

  useEffect(() => {
    const fetchRestaurants = async () => {
      try {
        const db = getFirestore();
        const restaurantsCollection = collection(db, 'restaurants');
        const snapshot = await getDocs(restaurantsCollection);
        const restaurantData = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));
        setRestaurants(restaurantData);
      } catch (error) {
        console.error('Error fetching restaurants:', error);
      }
    };

    fetchRestaurants();
  }, []);

  const handleRestaurantClick = (restaurant) => {
    setSelectedRestaurant(restaurant);
  };

  const handleItemClick = (item) => {
    setSelectedItem(item);
  };

  const handleQuantityChange = (event) => {
    setQuantity(event.target.value);
  };

  const handleCheckout = () => { //INCLUDE PRICE
    const queryString = `?foodName=${selectedItem.foodName}&price=${selectedItem.price}&quantity=${quantity}&restaurantName=${selectedRestaurant.name}`;
    router.push(`/checkout${queryString}`);
  };
  

  return (
    <>
      <Head>
        <title>LastBite</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
        <div className={styles.description}>
          <h1 className={styles.mainHook}> LastBite: Your favorite food, but cheaper ðŸ”¥ </h1>
          <br/>
          <h1 className={styles.restLabel}>Supported Restaurants</h1>
          <br />
          <div className={styles.restaurantGrid}>
            {restaurants.map((restaurant, index) => (
              <div key={index} className={styles.restaurantCard} onClick={() => handleRestaurantClick(restaurant)}>
                <h2>{restaurant.name}</h2>
                {/* Add more details as needed */}
              </div>
            ))}
          </div>
        </div>
        {selectedRestaurant && (
          <div className={styles.modalOverlay}>
            <div className={styles.modalContent}>
              <h2>{selectedRestaurant.name}</h2>
              {selectedRestaurant.foodSubmissions && selectedRestaurant.foodSubmissions.length > 0 ? (
                <ul>
                  {selectedRestaurant.foodSubmissions.map((submission, index) => (
                    <li key={index}>
                      {submission.foodName}: {submission.quantity} (Price: ${submission.price})
                      <button onClick={() => handleItemClick(submission)}>Select</button>
                    </li>
                  ))}
                </ul>
              ) : (
                <p>This restaurant hasn&apos;t listed any food yet!</p>
              )}
              <button onClick={() => setSelectedRestaurant(null)} className={styles.closeButton}>Close</button>
            </div>
          </div>
        )}

        {selectedItem && (
          <div className={styles.modalOverlay}>
            <div className={styles.modalContent}>
              <h2>{selectedItem.foodName}</h2>
              <p>Price: ${selectedItem.price}</p>
              <label>
                Quantity (out of the {selectedItem.quantity} available): <br/>
                <input type="number" value={quantity} onChange={handleQuantityChange} />
              </label>
              <button onClick={handleCheckout}>Checkout</button>
              <button onClick={() => setSelectedItem(null)} className={styles.closeButton}>Back</button>
            </div>
          </div>
        )}
      </main>
    </>
  );
}
