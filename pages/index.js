import { useState, useEffect } from 'react';
import Head from "next/head";
import { Inter } from "next/font/google";
import styles from "../styles/Restaurant.module.css";
import { getFirestore, collection, getDocs } from 'firebase/firestore';
import firebase from '../firebase'; // Import your Firebase configuration

const inter = Inter({ subsets: ["latin"] });

export default function HomePage() {
  const [restaurants, setRestaurants] = useState([]);
  const [selectedRestaurant, setSelectedRestaurant] = useState(null);
  
  useEffect(() => {
    const fetchRestaurants = async () => {
      try {
        const db = getFirestore();
        const restaurantsCollection = collection(db, 'restaurants');
        const snapshot = await getDocs(restaurantsCollection);
        const restaurantData = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));
        setRestaurants(restaurantData);
      } catch (error) {
        console.error('Error fetching restaurants:', error);
      }
    };

    fetchRestaurants();
  }, []);

  const handleRestaurantClick = (restaurant) => {
    setSelectedRestaurant(restaurant);
  };

  return (
    <>
      <Head>
        <title>LastBite</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
        <div className={styles.description}>
          <h1 className={styles.restaurantMainHook}>Restaurants</h1>
          <div className={styles.restaurantGrid}>
            {restaurants.map((restaurant, index) => (
              <div key={index} className={styles.restaurantCard} onClick={() => handleRestaurantClick(restaurant)}>
                <h2>{restaurant.name}</h2>
                {/* Add more details as needed */}
              </div>
            ))}
          </div>
        </div>
        {selectedRestaurant && (
          <div className={styles.restaurantPanel}>
            <h2>{selectedRestaurant.name}</h2>
            <ul>
              {selectedRestaurant.foodSubmissions.map((submission, index) => (
                <li key={index}>{submission.foodName}: {submission.quantity}</li>
              ))}
            </ul>
            <button onClick={() => setSelectedRestaurant(null)}>Close</button>
          </div>
        )}
      </main>
    </>
  );
}
